---

#### terraform api key

- name: Api user exists
  ansible.builtin.shell: "pveum user list | grep terraform-prov@pve"
  register: proxmox_api_user_exists
  ignore_errors: true
  no_log: true
  changed_when: "proxmox_api_user_exists.rc == 1"
  failed_when: "proxmox_api_user_exists.rc > 1"  # we only fail if the exit code is not 0 or 1 (even 1 is expected)
  when: proxmox_terraform_api_key | default('') != ""

- name: Create api user
  ansible.builtin.shell: |
    set -e
    pveum role add TerraformProv -privs "Datastore.Allocate,Datastore.AllocateSpace,Datastore.AllocateTemplate,Datastore.Audit,Pool.Allocate,SDN.Allocate,SDN.Use,Sys.Audit,Sys.Console,Sys.Modify,VM.Allocate,VM.Audit,VM.Clone,VM.Config.CDROM,VM.Config.CPU,VM.Config.Cloudinit,VM.Config.Disk,VM.Config.HWType,VM.Config.Memory,VM.Config.Network,VM.Config.Options,VM.Migrate,VM.Monitor,VM.PowerMgmt"
    pveum user add terraform-prov@pve --password {{ proxmox_terraform_api_key }}
    pveum aclmod / -user terraform-prov@pve -role TerraformProv
  when: proxmox_terraform_api_key | default('') != ""
  changed_when: proxmox_api_user_exists is failed
