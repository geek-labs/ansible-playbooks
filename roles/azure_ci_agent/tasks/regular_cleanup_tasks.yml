---

- name: Kill still running containers every midnight
  ansible.builtin.cron:
    name: Kill still running containers every midnight
    minute: "0"
    hour: "23"
    user: root
    job: "docker container kill $(docker ps -q) >> /var/log/docker-container-prune.log 2>&1 || true"
    cron_file: kill_dangling_containers

- name: Remove unneeded containers every half hour
  ansible.builtin.cron:
    name: Remove unneeded containers every half hour
    minute: "*/30"
    user: root
    job: "docker container prune --force >> /var/log/docker-container-prune.log 2>&1"
    cron_file: remove_killed_containers

- name: Remove unneeded volumes every hour
  ansible.builtin.cron:
    name: Remove unneeded volumes every hour
    hour: "*/1"
    user: root
    job: "docker volume prune --force >> /var/log/docker-volume-prune.log 2>&1"
    cron_file: remove_dangling_volumes

- name: Prune all docker images every week
  ansible.builtin.cron:
    name: Prune all docker images every week
    weekday: "1"
    minute: "10"
    hour: "23"
    user: root
    job: "docker image rm -f $(docker image ls -q) >> /var/log/docker-image-prune.log 2>&1 || true"
    cron_file: prune_all_docker_images

# after removing images and their layers, disk space might not be freed properly.
# running system prune fixes this (even though it should no longer remove anything in our case)
# known issue, also see https://github.com/moby/moby/issues/21925
- name: Free disk space once a week
  ansible.builtin.cron:
    name: Free disk space once a week
    weekday: "1"
    minute: "50"
    hour: "23"
    user: root
    job: "docker system prune -af >> /var/log/docker-system-prune.log 2>&1 || true"
    cron_file: free_disk_space
