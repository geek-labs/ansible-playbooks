---
- name: Apt update
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    pkg:
      - multipath-tools
      - curl

# uninstall firewall
- name: Remote ufw firewall
  ansible.builtin.apt:
    name: ufw
    state: absent
    purge: true

## fix ulimit for k8s
- name: Limits
  ansible.builtin.copy:
    src: files/limits_k8s.conf
    dest: '/etc/security/limits.d/k8s.conf'
    mode: '0644'

## fix multipathd
- name: Multipathd config
  ansible.builtin.copy:
    src: files/multipath.conf
    dest: '/etc/multipath.conf'
    mode: '0644'
  notify: 'restart multipathd service'

- name: Check k3s version
  ansible.builtin.shell: "k3s --version | grep '{{ k3s.version }}'"
  register: k3s_version_matches
  ignore_errors: true
  changed_when: false
  no_log: false

## install k3s
- name: Install k3s # noqa: no-changed-when
  args:
    executable: /usr/bin/bash
  ansible.builtin.shell: |
    set -o pipefail
    curl -fL https://get.k3s.io | \
      INSTALL_K3S_VERSION="{{ k3s.version }}" \
      K3S_KUBECONFIG_MODE="640" \
      INSTALL_K3S_EXEC="server \
      --cluster-cidr=10.12.0.0/16 \
      --disable-network-policy \
      --flannel-backend=none \
      --disable traefik \
      --disable local-storage \
      --disable metrics-server" sh -
  when: k3s_version_matches is failed

- name: Allow sudoer access to k3s config
  ansible.builtin.file:
    path: /etc/rancher/k3s/k3s.yaml
    owner: root
    group: sudo

## shutdown helper
- name: K3s shutdown helper
  ansible.builtin.copy:
    src: 'files/k3s-shutdown.service'
    dest: '/etc/systemd/system/k3s-shutdown.service'
    mode: '0644'

- name: Start k3s shutdown helper
  ansible.builtin.systemd_service:
    name: k3s-shutdown.service
    enabled: true
    daemon_reload: true

#### calicoctl
# https://docs.tigera.io/calico/latest/operations/calicoctl/install
# FIXME: we might want to have the version configurable?
- name: Download calicoctl
  ansible.builtin.get_url:
    url: https://github.com/projectcalico/calico/releases/download/v3.28.0/calicoctl-linux-amd64
    dest: /usr/local/bin/calicoctl
    checksum: sha256:4ea270699e67ca29e5533ddb0a68d370cb0005475796c7e841f83047da6297b6
    mode: '0755'
    force: false

- name: Create kubeconfig folder for calicoctl
  ansible.builtin.file:
    path: '/root/.kube'
    mode: '0500'
    owner: root
    group: root
    state: directory
    force: false
    modification_time: preserve
    access_time: preserve

- name: Place cluster config so calicoctl can use it
  ansible.builtin.file:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /root/.kube/config
    state: link

- name: K3s uninstall tools
  ansible.builtin.copy:
    src: files/k3s-full-uninstall.sh
    dest: '/root/k3s-full-uninstall.sh'
    mode: '0700'
